services:
  postgres:
    image: postgres:15-alpine
    container_name: delayed-notifier-postgres
    environment:
      POSTGRES_DB: orders-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d orders-db" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: delayed-notifier-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=delayed-notifier-password
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  redis:
    image: bitnami/redis:latest
    container_name: delayed-notifier-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=delayed-notifier-password
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "delayed-notifier-password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: delayed-notifier
      target: builder
    command: ["/app/api"]
    container_name: delayed-notifier-api
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      CONFIG_PATH: ./configs/api/prod.yaml
    volumes:
      - ./configs:/app/configs:ro
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  worker:
    build:
      context: delayed-notifier
      target: builder
    command: [ "/app/worker" ]
    container_name: delayed-notifier-worker
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    environment:
      CONFIG_PATH: ./configs/worker/prod.yaml
    restart: on-failure

volumes:
  rabbitmq_data:
  redis_data:
  pgdata: